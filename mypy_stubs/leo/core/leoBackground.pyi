from typing import Any

class BackgroundProcessManager:
    data: Any
    process_queue: Any
    pid: Any
    def __init__(self) -> None: ...
    class ProcessData:
        c: Any
        callback: Any
        fn: Any
        kind: Any
        link_pattern: Any
        link_root: Any
        shell: Any
        def __init__(self, c, kind, fn, link_pattern, link_root, shell) -> None: ...
    def check_process(self) -> None: ...
    def end(self) -> None: ...
    def start_next(self) -> None: ...
    def kill(self, kind: Any | None = ...) -> None: ...
    def on_idle(self) -> None: ...
    def put_log(self, s) -> None: ...
    kind: Any
    def start_process(self, c, command, kind, fn: Any | None = ..., link_pattern: Any | None = ..., link_root: Any | None = ..., shell: bool = ...) -> None: ...
