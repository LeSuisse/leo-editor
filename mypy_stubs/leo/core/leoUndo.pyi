from typing import Any

def cmd(name): ...

class Undoer:
    c: Any
    granularity: Any
    max_undo_stack_size: Any
    beads: Any
    bead: int
    undoType: str
    redoMenuLabel: str
    undoMenuLabel: str
    realRedoMenuLabel: str
    realUndoMenuLabel: str
    undoing: bool
    redoing: bool
    per_node_undo: bool
    optionalIvars: Any
    afterTree: Any
    beforeTree: Any
    children: Any
    deleteMarkedNodesData: Any
    followingSibs: Any
    inHead: Any
    kind: Any
    newBack: Any
    newBody: Any
    newChildren: Any
    newHead: Any
    newIns: Any
    newMarked: Any
    newN: Any
    newP: Any
    newParent: Any
    newParent_v: Any
    newRecentFiles: Any
    newSel: Any
    newTree: Any
    newYScroll: Any
    oldBack: Any
    oldBody: Any
    oldChildren: Any
    oldHead: Any
    oldIns: Any
    oldMarked: Any
    oldN: Any
    oldParent: Any
    oldParent_v: Any
    oldRecentFiles: Any
    oldSel: Any
    oldTree: Any
    oldYScroll: Any
    pasteAsClone: Any
    prevSel: Any
    sortChildren: Any
    verboseUndoGroup: Any
    def __init__(self, c) -> None: ...
    def reloadSettings(self) -> None: ...
    def clearOptionalIvars(self) -> None: ...
    def cutStack(self) -> None: ...
    def dumpBead(self, n): ...
    def dumpTopBead(self): ...
    def getBead(self, n): ...
    def peekBead(self, n): ...
    def pushBead(self, bunch) -> None: ...
    def redoMenuName(self, name): ...
    def undoMenuName(self, name): ...
    def setIvarsFromBunch(self, bunch) -> None: ...
    def setRedoType(self, theType) -> None: ...
    def setUndoType(self, theType) -> None: ...
    def setUndoTypes(self) -> None: ...
    def restoreTree(self, treeInfo) -> None: ...
    def restoreVnodeUndoInfo(self, bunch) -> None: ...
    def restoreTnodeUndoInfo(self, bunch) -> None: ...
    def saveTree(self, p, treeInfo: Any | None = ...): ...
    def createVnodeUndoInfo(self, v): ...
    def createTnodeUndoInfo(self, v): ...
    def trace(self) -> None: ...
    def updateMarks(self, oldOrNew) -> None: ...
    def afterChangeBody(self, p, command, bunch) -> None: ...
    def afterChangeGroup(self, p, undoType, reportFlag: bool = ...) -> None: ...
    def afterChangeNodeContents(self, p, command, bunch) -> None: ...
    def afterChangeHeadline(self, p, command, bunch) -> None: ...
    afterChangeHead: Any
    def afterChangeTree(self, p, command, bunch) -> None: ...
    def afterClearRecentFiles(self, bunch): ...
    def afterCloneMarkedNodes(self, p) -> None: ...
    def afterCopyMarkedNodes(self, p) -> None: ...
    def afterCloneNode(self, p, command, bunch) -> None: ...
    def afterDehoist(self, p, command) -> None: ...
    def afterDeleteNode(self, p, command, bunch) -> None: ...
    def afterDeleteMarkedNodes(self, data, p) -> None: ...
    def afterDemote(self, p, followingSibs) -> None: ...
    def afterHoist(self, p, command) -> None: ...
    def afterInsertNode(self, p, command, bunch) -> None: ...
    def afterMark(self, p, command, bunch) -> None: ...
    def afterMoveNode(self, p, command, bunch) -> None: ...
    def afterPromote(self, p, children) -> None: ...
    def afterSort(self, p, bunch) -> None: ...
    def beforeChangeBody(self, p): ...
    def beforeChangeGroup(self, p, command, verboseUndoGroup: bool = ...) -> None: ...
    def beforeChangeHeadline(self, p): ...
    beforeChangeHead: Any
    def beforeChangeNodeContents(self, p): ...
    def beforeChangeTree(self, p): ...
    def beforeClearRecentFiles(self): ...
    def beforeCloneNode(self, p): ...
    def beforeDeleteNode(self, p): ...
    def beforeInsertNode(self, p, pasteAsClone: bool = ..., copiedBunchList: Any | None = ...): ...
    def beforeMark(self, p, command): ...
    def beforeMoveNode(self, p): ...
    def beforeSort(self, p, undoType, oldChildren, newChildren, sortChildren): ...
    def createCommonBunch(self, p): ...
    def canRedo(self): ...
    def canUndo(self): ...
    def clearUndoState(self) -> None: ...
    def doTyping(self, p, undo_type, oldText, newText, newInsert: Any | None = ..., oldSel: Any | None = ..., newSel: Any | None = ..., oldYview: Any | None = ...) -> None: ...
    setUndoTypingParams: Any
    def recognizeStartOfTypingWord(self, old_lines, old_row, old_col, old_ch, new_lines, new_row, new_col, new_ch, prev_row, prev_col): ...
    def enableMenuItems(self) -> None: ...
    def onSelect(self, old_p, p) -> None: ...
    def putIvarsToVnode(self, p) -> None: ...
    def setIvarsFromVnode(self, p) -> None: ...
    def updateAfterTyping(self, p, w) -> None: ...
    def redo(self, event: Any | None = ...) -> None: ...
    def redoHelper(self) -> None: ...
    def redoChangeBody(self) -> None: ...
    def redoChangeHeadline(self) -> None: ...
    def redoClearRecentFiles(self) -> None: ...
    def redoCloneMarkedNodes(self) -> None: ...
    def redoCopyMarkedNodes(self) -> None: ...
    def redoCloneNode(self) -> None: ...
    def redoDeleteMarkedNodes(self) -> None: ...
    def redoDeleteNode(self) -> None: ...
    def redoDemote(self) -> None: ...
    def redoGroup(self) -> None: ...
    def redoHoistNode(self) -> None: ...
    def redoDehoistNode(self) -> None: ...
    def redoInsertNode(self) -> None: ...
    def redoMark(self) -> None: ...
    def redoMove(self) -> None: ...
    def redoNodeContents(self) -> None: ...
    def redoPromote(self) -> None: ...
    def redoSort(self) -> None: ...
    def redoTree(self) -> None: ...
    def redoTyping(self) -> None: ...
    def undo(self, event: Any | None = ...) -> None: ...
    def undoHelper(self) -> None: ...
    def undoChangeBody(self) -> None: ...
    def undoChangeHeadline(self) -> None: ...
    def undoClearRecentFiles(self) -> None: ...
    def undoCloneMarkedNodes(self) -> None: ...
    def undoCloneNode(self) -> None: ...
    def undoCopyMarkedNodes(self) -> None: ...
    def undoDeleteMarkedNodes(self) -> None: ...
    def undoDeleteNode(self) -> None: ...
    def undoDemote(self) -> None: ...
    def undoGroup(self) -> None: ...
    def undoHoistNode(self) -> None: ...
    def undoDehoistNode(self) -> None: ...
    def undoInsertNode(self) -> None: ...
    def undoMark(self) -> None: ...
    def undoMove(self) -> None: ...
    def undoNodeContents(self) -> None: ...
    def undoPromote(self) -> None: ...
    def undoRedoText(self, p, leading, trailing, oldMidLines, newMidLines, oldNewlines, newNewlines, tag: str = ..., undoType: Any | None = ...) -> None: ...
    def undoRedoTree(self, p, new_data, old_data): ...
    def undoSort(self) -> None: ...
    def undoTree(self) -> None: ...
    def undoTyping(self) -> None: ...
    def update_status(self) -> None: ...
